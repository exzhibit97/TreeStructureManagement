@model TreeStructure.ViewModels.CategoryTreeViewModel

@foreach (var category in Model.Categories)
{
    var ulId = $"ul-{category.Id}";
    var liId = $"li-{category.Id}";
    <li id="@liId" class="wholeNode">
        @if (category.HasChildren())
        {
        <i class="expandable fas fa-chevron-down"></i>
        }
        <a>@category.Name</a><span class="menu"><i class="fas fa-plus"></i></span>
                             <span class="options hidden">
                                 <a class="btn btn-danger delete"
                                    data-id="@category.Id"
                                    data-controller="Categories"
                                    data-action="Delete"
                                    data-body-message="Are you sure to delete this node?">
                                     <i class="fas fa-trash alt"></i>
                                     Delete
                                 </a>
                                 <a class="btn btn-secondary edit"
                                    data-id="@category.Id"
                                    data-controller="Categories"
                                    data-action="Edit"
                                    onclick="loadEdit(@category.Id)"
                                    data-body-message="Are you sure to edit this node?">
                                     <i class="fas fa-edit"></i>
                                     Edit
                                 </a>
                                 <a class="btn btn-primary render" id="@category.Id"><i class="fas fa-plus"></i>Add node</a>
                                 <button onclick="sortListDir(@category.Id)">Sort</button>
                             </span>
        <ul id="@ulId">
            @if (category.HasChildren())
            {

                @await Component.InvokeAsync("CategoriesStructure", new { categories = category.Children, isFirstCall = false })
            }
        </ul>
    </li>

}